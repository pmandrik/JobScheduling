# IR entry: @135_1___main___get_model__locals__TSModel_construct_553
# Total subgraphs: 3

# Attrs:
has_shard: 0
flash_sp_send_recv_has_attached: 1
has_attached: 1
jit_level: O0
check_set_strategy_valid_once_only: 1
FLASH_SP_RUN_ONCE_ONLY: 1
pynative_run_in_graph: 0
FIAS_SP_RUN_ONCE_ONLY: 1
less_bn: 0
auto_parallel_finish_pre_action: 1

# Total params: 4
# Params:
%para1_centers: <Tensor[Int32], (3200, 2)> : [3200, 2]
%para2_tree: <Tensor[Int32], (1069, 3)> : [1069, 3]
%para3_vector_uint8: <Tensor[UInt8], (1, 2)> : [1, 2]
%para4_open_list: <Tensor[Int32], (10)> : [10]

Node counting information:
Total number of nodes: 138
Total number of cnodes: 80

subgraph attr:
has_shard: 0
flash_sp_send_recv_has_attached: 1
has_attached: 1
jit_level: O0
check_set_strategy_valid_once_only: 1
FLASH_SP_RUN_ONCE_ONLY: 1
pynative_run_in_graph: 0
FIAS_SP_RUN_ONCE_ONLY: 1
less_bn: 0
auto_parallel_finish_pre_action: 1
subgraph instance: 135_1___main___get_model__locals__TSModel_construct_553 : 0x61d0f5f2fa80
# In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
subgraph @135_1___main___get_model__locals__TSModel_construct_553() {
  %0(CNode_524) = PrimFunc_Gather(%para2_tree, %para4_open_list, I64(0), I64(0)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (1069, 3)>, <Tensor[Int32], (10)>, <Int64, NoShape>, <Int64, NoShape>) -> (<Tensor[Int32], (10, 3)>)
      # Fullname with scope: (Default/Gather-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:71, 22~52/      child_indexes = ops.gather(tree, open_list, 0)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9722~9788/def gather(input_params, input_indices, axis, batch_dims=0):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9788, 11~55/    return gather_op(input_params, input_indices, axis)/
  %1(CNode_525) = PrimFunc_Gather(%para1_centers, %0, I64(0), I64(0)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (3200, 2)>, <Tensor[Int32], (10, 3)>, <Int64, NoShape>, <Int64, NoShape>) -> (<Tensor[Int32], (10, 3, 2)>)
      # Fullname with scope: (Default/Gather-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:73, 25~62/      selected_centers = ops.gather(centers, child_indexes, 0)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9722~9788/def gather(input_params, input_indices, axis, batch_dims=0):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9788, 11~55/    return gather_op(input_params, input_indices, axis)/
  %2(CNode_526) = PrimFunc_Reshape(%1, (I64(30), I64(2))) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (10, 3, 2)>, <Tuple[Int64*2], TupleShape(NoShape, NoShape), elements_use_flags={[const vector]{1, 1}}>) -> (<Tensor[Int32], (30, 2)>)
      # Fullname with scope: (Default/Reshape-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:74, 25~96/      selected_centers = ops.reshape(selected_centers, (self.op_size*self.tree_degree,self.dim))/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:3195~3227/def reshape(input, shape):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:3227, 11~35/    return reshape_op(input, shape)/
  %3(CNode_527) = PrimFunc_Cast(%para3_vector_uint8, I64(34)) primitive_attrs: {output_names: [output], input_names: [x, dst_type]} cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[UInt8], (1, 2)>, <Int64, NoShape>) -> (<Tensor[Int32], (1, 2)>)
      # Fullname with scope: (Default/Cast-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:104, 15~23/      vector = ops.cast(vector_uint8, dtype=mindspore.int32)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9889~9917/def cast(input, dtype):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9917, 11~32/    return cast_op(input, dtype)/
  %4(d) = PrimFunc_Sub(%2, %3) primitive_attrs: {output_names: [output], input_names: [x, y]} cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (30, 2)>, <Tensor[Int32], (1, 2)>) -> (<Tensor[Int32], (30, 2)>)
      # Fullname with scope: (Default/Sub-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:133, 38~72/      open_list, top_list, top_dist = main_loop_fn(main_loop_init_state)/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~95/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:77, 11~49/      ls = self.calc_l2(selected_centers, vector)/
      # In file /home/i/work/JobScheduling/l2/test3.py:77, 11~23/      ls = self.calc_l2(selected_centers, vector)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:58~65, 4~15/    def calc_l2(self, a, b):/
      # In file /home/i/work/JobScheduling/l2/test3.py:60, 10~15/      d = a - b/
  %5(CNode_528$d2$ls) = PrimFunc_Square(%4) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (30, 2)>) -> (<Tensor[Int32], (30, 2)>)
      # Fullname with scope: (Default/Square-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:133, 38~72/      open_list, top_list, top_dist = main_loop_fn(main_loop_init_state)/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~95/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:77, 11~49/      ls = self.calc_l2(selected_centers, vector)/
      # In file /home/i/work/JobScheduling/l2/test3.py:77, 11~23/      ls = self.calc_l2(selected_centers, vector)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:58~65, 4~15/    def calc_l2(self, a, b):/
      # In file /home/i/work/JobScheduling/l2/test3.py:61, 11~24/      d2 = ops.square(d)/
      # In file /home/i/work/JobScheduling/l2/test3.py:61, 11~21/      d2 = ops.square(d)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:2704~2728/def square(input):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:2728, 11~27/    return square_op(input)/
  %6(CNode_529) = PrimFunc_SumExt(%5, (I64(1)), Bool(0), None) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (30, 2)>, <Tuple[Int64], TupleShape(NoShape), elements_use_flags={[const vector]{1}}>, <Bool, NoShape>, <None, NoShape>) -> (<Tensor[Int64], (30)>)
      # Fullname with scope: (Default/SumExt-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:133, 38~72/      open_list, top_list, top_dist = main_loop_fn(main_loop_init_state)/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~95/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:77, 11~23/      ls = self.calc_l2(selected_centers, vector)/
      # In file /home/i/work/JobScheduling/l2/test3.py:58~65, 4~15/    def calc_l2(self, a, b):/
      # In file /home/i/work/JobScheduling/l2/test3.py:63, 11~18/      ls = ops.sum(d2, dim=1, keepdim=False)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/math_func.py:10741~10804/def sum(input, dim=None, keepdim=False, *, dtype=None):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/math_func.py:10804, 11~49/    return sum_ext_op(input, dim, keepdim, dtype)/
  %7(CNode_530) = PrimFunc_Neg(%6) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int64], (30)>) -> (<Tensor[Int64], (30)>)
      # Fullname with scope: (Default/Neg-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5491~5492, 4~22/    if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5492, 16~22/        input = -input/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9696~9719/def neg(input):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9719, 11~24/    return neg_op(input)/
  %8(res) = TopK(%7, I64(10)) primitive_attrs: {output_names: [values, indices], sorted: Bool(1), input_names: [input, k]} cnode_attrs: {checkpoint: Bool(1), replace_real_kernel_in_backend: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int64], (30)>, <Int64, NoShape>) -> (<Tuple[Tensor[Int64],Tensor[Int32]], TupleShape((10), (10))>)
      # Fullname with scope: (Default/TopK-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5495, 18~34/            res = top_k_(input, k)/
  %9(CNode_531) = TupleGetItem(%8, I64(0)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int64],Tensor[Int32]], TupleShape((10), (10))>, <Int64, NoShape>) -> (<Tensor[Int64], (10)>)
      # Fullname with scope: (Default/TupleGetItem-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5496, 31~37/            values, indices = -res[0], res[1]/
  %10(CNode_532) = PrimFunc_Neg(%9) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int64], (10)>) -> (<Tensor[Int64], (10)>)
      # Fullname with scope: (Default/Neg-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5496, 30~37/            values, indices = -res[0], res[1]/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9696~9719/def neg(input):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9719, 11~24/    return neg_op(input)/
  %11(CNode_533) = PrimFunc_Cast(%10, I64(34)) primitive_attrs: {output_names: [output], input_names: [x, dst_type]} cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int64], (10)>, <Int64, NoShape>) -> (<Tensor[Int32], (10)>)
      # Fullname with scope: (Default/Cast-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:104, 15~23/      vector = ops.cast(vector_uint8, dtype=mindspore.int32)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9889~9917/def cast(input, dtype):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9917, 11~32/    return cast_op(input, dtype)/
  %12(CNode_534) = MakeTuple(Tensor(shape=[102], dtype=Int32, value=[...]), %11) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (102), value=...>, <Tensor[Int32], (10)>) -> (<Tuple[Tensor[Int32]*2], TupleShape((102), (10)), elements_use_flags={[const vector]{1, 1}}>)
      # Fullname with scope: (Default/MakeTuple-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:133, 38~72/      open_list, top_list, top_dist = main_loop_fn(main_loop_init_state)/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~99/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~49/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:86~94, 4~35/    def update_top_list(self, top_list, top_dist, cand_top_list, cand_top_dist):/
      # In file /home/i/work/JobScheduling/l2/test3.py:89, 36~61/      tot_dist  = mindspore.ops.cat((top_dist, cand_top_dist))/
  %13(CNode_535) = PrimFunc_Concat(%12, I64(0)) cnode_attrs: {checkpoint: Bool(1), replace_real_kernel_in_backend: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*2], TupleShape((102), (10)), elements_use_flags={[const vector]{1, 1}}>, <Int64, NoShape>) -> (<Tensor[Int32], (112)>)
      # Fullname with scope: (Default/Concat-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~49/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/
      # In file /home/i/work/JobScheduling/l2/test3.py:86~94, 4~35/    def update_top_list(self, top_list, top_dist, cand_top_list, cand_top_dist):/
      # In file /home/i/work/JobScheduling/l2/test3.py:89, 18~62/      tot_dist  = mindspore.ops.cat((top_dist, cand_top_dist))/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:4754~4784/def cat(tensors, axis=0):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:4784, 11~37/    return concat_impl(tensors, axis)/
  %14(CNode_536) = PrimFunc_Neg(%13) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (112)>) -> (<Tensor[Int32], (112)>)
      # Fullname with scope: (Default/Neg-op2)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5491~5492, 4~22/    if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5492, 16~22/        input = -input/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9696~9719/def neg(input):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9719, 11~24/    return neg_op(input)/
  %15(res) = TopK(%14, I64(102)) primitive_attrs: {output_names: [values, indices], sorted: Bool(1), input_names: [input, k]} cnode_attrs: {checkpoint: Bool(1), replace_real_kernel_in_backend: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (112)>, <Int64, NoShape>) -> (<Tuple[Tensor[Int32]*2], TupleShape((102), (102))>)
      # Fullname with scope: (Default/TopK-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5495, 18~34/            res = top_k_(input, k)/
  %16(CNode_537) = TupleGetItem(%15, I64(0)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*2], TupleShape((102), (102))>, <Int64, NoShape>) -> (<Tensor[Int32], (102)>)
      # Fullname with scope: (Default/TupleGetItem-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5496, 31~37/            values, indices = -res[0], res[1]/
  %17(CNode_538) = PrimFunc_Neg(%16) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (102)>) -> (<Tensor[Int32], (102)>)
      # Fullname with scope: (Default/Neg-op3)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5496, 30~37/            values, indices = -res[0], res[1]/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9696~9719/def neg(input):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9719, 11~24/    return neg_op(input)/
  %18(CNode_539) = PrimFunc_Reshape(%0, (I64(30))) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (10, 3)>, <Tuple[Int64], TupleShape(NoShape), elements_use_flags={[const vector]{1}}>) -> (<Tensor[Int32], (30)>)
      # Fullname with scope: (Default/Reshape-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:79, 27~87/      child_indexes_flat = ops.reshape(child_indexes, (self.op_size*self.tree_degree,))/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:3195~3227/def reshape(input, shape):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:3227, 11~35/    return reshape_op(input, shape)/
  %19(CNode_540) = TupleGetItem(%8, I64(1)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int64],Tensor[Int32]], TupleShape((10), (10))>, <Int64, NoShape>) -> (<Tensor[Int32], (10)>)
      # Fullname with scope: (Default/TupleGetItem-op2)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5496, 39~45/            values, indices = -res[0], res[1]/
  %20(CNode_541) = PrimFunc_Gather(%18, %19, I64(0), I64(0)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (30)>, <Tensor[Int32], (10)>, <Int64, NoShape>, <Int64, NoShape>) -> (<Tensor[Int32], (10)>)
      # Fullname with scope: (Default/Gather-op2)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:83, 16~58/      indexes = ops.gather(child_indexes_flat, indexes, 0)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9722~9788/def gather(input_params, input_indices, axis, batch_dims=0):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9788, 11~55/    return gather_op(input_params, input_indices, axis)/
  %21(CNode_542) = MakeTuple(Tensor(shape=[102], dtype=Int32, value=[...]), %20) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (102), value=...>, <Tensor[Int32], (10)>) -> (<Tuple[Tensor[Int32]*2], TupleShape((102), (10)), elements_use_flags={[const vector]{1, 1}}>)
      # Fullname with scope: (Default/MakeTuple-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:133, 38~72/      open_list, top_list, top_dist = main_loop_fn(main_loop_init_state)/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~99/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~49/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:86~94, 4~35/    def update_top_list(self, top_list, top_dist, cand_top_list, cand_top_dist):/
      # In file /home/i/work/JobScheduling/l2/test3.py:90, 36~61/      tot_index = mindspore.ops.cat((top_list, cand_top_list))/
  %22(CNode_543) = PrimFunc_Concat(%21, I64(0)) cnode_attrs: {checkpoint: Bool(1), replace_real_kernel_in_backend: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*2], TupleShape((102), (10)), elements_use_flags={[const vector]{1, 1}}>, <Int64, NoShape>) -> (<Tensor[Int32], (112)>)
      # Fullname with scope: (Default/Concat-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~49/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/
      # In file /home/i/work/JobScheduling/l2/test3.py:86~94, 4~35/    def update_top_list(self, top_list, top_dist, cand_top_list, cand_top_dist):/
      # In file /home/i/work/JobScheduling/l2/test3.py:90, 18~62/      tot_index = mindspore.ops.cat((top_list, cand_top_list))/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:4754~4784/def cat(tensors, axis=0):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:4784, 11~37/    return concat_impl(tensors, axis)/
  %23(CNode_544) = TupleGetItem(%15, I64(1)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*2], TupleShape((102), (102))>, <Int64, NoShape>) -> (<Tensor[Int32], (102)>)
      # Fullname with scope: (Default/TupleGetItem-op3)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5496, 39~45/            values, indices = -res[0], res[1]/
  %24(CNode_545) = PrimFunc_Gather(%22, %23, I64(0), I64(0)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (112)>, <Tensor[Int32], (102)>, <Int64, NoShape>, <Int64, NoShape>) -> (<Tensor[Int32], (102)>)
      # Fullname with scope: (Default/Gather-op3)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~49/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/
      # In file /home/i/work/JobScheduling/l2/test3.py:86~94, 4~35/    def update_top_list(self, top_list, top_dist, cand_top_list, cand_top_dist):/
      # In file /home/i/work/JobScheduling/l2/test3.py:93, 21~54/      new_top_list = ops.gather(tot_index, indexes, 0)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9722~9788/def gather(input_params, input_indices, axis, batch_dims=0):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9788, 11~55/    return gather_op(input_params, input_indices, axis)/
  %25(CNode_546) = MakeTuple(%17, %24) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (102)>, <Tensor[Int32], (102)>) -> (<Tuple[Tensor[Int32]*2], TupleShape((102), (102)), elements_use_flags={[const vector]{1, 1}}>)
      # Fullname with scope: (Default/MakeTuple-op2)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:135, 9~51/      if cond_func((open_list, top_list, top_dist)):/
      # In file /home/i/work/JobScheduling/l2/test3.py:126~129, 6~34/      def cond_func(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
  %26(CNode_548$open_list$open_list) = PrimFunc_ClampScalar(%20, I64(0), I64(1068)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (10)>, <Int64, NoShape>, <Int64, NoShape>) -> (<Tensor[Int32], (10)>)
      # Fullname with scope: (Default/ClampScalar-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:133, 38~72/      open_list, top_list, top_dist = main_loop_fn(main_loop_init_state)/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:120, 20~62/        open_list = self.update_open_list(tree, cand_top_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:120, 20~41/        open_list = self.update_open_list(tree, cand_top_list)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:96~98, 4~22/    def update_open_list(self, tree, cand_top_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:97, 18~71/      open_list = mindspore.ops.clip(cand_top_list, 0, tree.shape[0]-1)/
      # In file /home/i/work/JobScheduling/l2/test3.py:97, 18~36/      open_list = mindspore.ops.clip(cand_top_list, 0, tree.shape[0]-1)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/clip_func.py:340~347/def clip(input, min=None, max=None):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/clip_func.py:347, 11~33/    return clamp(input, min, max)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/clip_func.py:347, 11~16/    return clamp(input, min, max)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/clip_func.py:227~276/def clamp(input, min=None, max=None):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/clip_func.py:276, 11~40/    return clamp_scalar(input, min, max)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/clip_func.py:276, 11~23/    return clamp_scalar(input, min, max)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:4291~4345/def clamp_scalar(input, min=None, max=None):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:4345, 11~43/    return clamp_scalar_op(input, min, max)/
  %27(CNode_549) = PrimFunc_Max(%26) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (10)>) -> (<Tensor[Int32], ()>)
      # Fullname with scope: (Default/Max-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:135, 9~51/      if cond_func((open_list, top_list, top_dist)):/
      # In file /home/i/work/JobScheduling/l2/test3.py:126~129, 6~34/      def cond_func(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:129, 15~29/        return max(open_list) != 0/
      # In file /home/i/work/JobScheduling/l2/test3.py:129, 15~18/        return max(open_list) != 0/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/_extends/parse/standard_method.py:2606~2624/def ms_max(*data):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/_extends/parse/standard_method.py:2613, 15~36/        return ms_max_one_element(x)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/_extends/parse/standard_method.py:2613, 15~33/        return ms_max_one_element(x)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/_extends/parse/standard_method.py:2578~2603/def ms_max_one_element(x):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/_extends/parse/standard_method.py:2585~2586, 8~100/        if tensor_shape_len >= 2:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/_extends/parse/standard_method.py:2587, 15~22/        return x.max()/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5107~5191/def max(input, axis=None, keepdims=False, *, initial=None, where=None):  # pylint: disable=redefined-outer-name/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5182, 16~27/        return (max_(input), Tensor(0, dtype=mstype.int64))/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5182, 16~20/        return (max_(input), Tensor(0, dtype=mstype.int64))/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9951~9957/def max_(input):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9957, 11~24/    return max_op(input)/
  %28(CNode_550) = PrimFunc_NotEqual(%27, Tensor(shape=[], dtype=Int32, value=0)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], ()>, <Tensor[Int32], (), value=...>) -> (<Tensor[Bool], ()>)
      # Fullname with scope: (Default/NotEqual-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:135, 9~51/      if cond_func((open_list, top_list, top_dist)):/
      # In file /home/i/work/JobScheduling/l2/test3.py:126~129, 6~34/      def cond_func(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:129, 15~34/        return max(open_list) != 0/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:7890~7897/def not_equal(input, other):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:7897, 11~37/    return not_equal_op(input, other)/
  %29(CNode_551) = Depend(%28, %25) primitive_attrs: {side_effect_propagate: I64(1)} cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0), topo_sort_rhs_first: Bool(1)}
      : (<Tensor[Bool], ()>, <Tuple[Tensor[Int32]*2], TupleShape((102), (102)), elements_use_flags={[const vector]{1, 1}}>) -> (<Tensor[Bool], ()>)
      # Fullname with scope: (Default/Depend-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:135, 9~51/      if cond_func((open_list, top_list, top_dist)):/
      # In file /home/i/work/JobScheduling/l2/test3.py:126~129, 6~34/      def cond_func(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:129, 15~34/        return max(open_list) != 0/
  %30(CNode_586) = Print("main_loop_fn ====", IOMonad[IO]) primitive_attrs: {side_effect_io: Bool(1)} cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<String, NoShape>, <IOMonad, NoShape>) -> (<Tensor[Int32], (1)>)
      # Fullname with scope: (Default/Print-op2)
  %31(ValueNode_587) = UpdateState(IOMonad[IO], %30) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<IOMonad, NoShape>, <Tensor[Int32], (1)>) -> (<IOMonad, NoShape>)
      # Fullname with scope: (Default/UpdateState-op2)
  %32(CNode_588) = Print(%26, %24, %17, %31) primitive_attrs: {side_effect_io: Bool(1)} cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (10)>, <Tensor[Int32], (102)>, <Tensor[Int32], (102)>, <IOMonad, NoShape>) -> (<Tensor[Int32], (1)>)
      # Fullname with scope: (Default/Print-op3)
  %33(ValueNode_589) = UpdateState(%31, %32) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<IOMonad, NoShape>, <Tensor[Int32], (1)>) -> (<IOMonad, NoShape>)
      # Fullname with scope: (Default/UpdateState-op3)
  %34(CNode_606) = Partial(@136_4_✓__main___get_model__locals__TSModel_construct_584, %17, %3, %para1_centers, %para2_tree, %26, %24, %33) primitive_attrs: {side_effect_propagate: I64(1)} cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Func, NoShape>, <Tensor[Int32], (102)>, <Tensor[Int32], (1, 2)>, <Tensor[Int32], (3200, 2)>, <Tensor[Int32], (1069, 3)>, <Tensor[Int32], (10)>, <Tensor[Int32], (102)>, <IOMonad, NoShape>) -> (<Func, NoShape>)
      # Fullname with scope: (Default/Partial-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:135~137, 6~74/      if cond_func((open_list, top_list, top_dist)):/
  %35(CNode_607) = Partial(@137_100_✗__main___get_model__locals__TSModel_construct_585, %24, %17, %26, %33) primitive_attrs: {side_effect_propagate: I64(1)} cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Func, NoShape>, <Tensor[Int32], (102)>, <Tensor[Int32], (102)>, <Tensor[Int32], (10)>, <IOMonad, NoShape>) -> (<Func, NoShape>)
      # Fullname with scope: (Default/Partial-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:135~137, 6~74/      if cond_func((open_list, top_list, top_dist)):/
  %36(CNode_608) = Switch(%29, %34, %35) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Bool], ()>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      # Fullname with scope: (Default/Switch-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:135~137, 6~74/      if cond_func((open_list, top_list, top_dist)):/
  %37(CNode_609) = %36[@FuncUnion(@136_4_✓__main___get_model__locals__TSModel_construct_584, @137_100_✗__main___get_model__locals__TSModel_construct_585)]()
      : () -> (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>)
      # Fullname with scope: (0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:135~137, 6~74/      if cond_func((open_list, top_list, top_dist)):/
  %38(ValueNode_591) = TupleGetItem(%37, I64(0)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>, <Int64, NoShape>) -> (<Tensor[Int32], (102)>)
      # Fullname with scope: (Default/TupleGetItem-op8)
  %39(ValueNode_592) = TupleGetItem(%37, I64(1)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>, <Int64, NoShape>) -> (<Tensor[Int32], (102)>)
      # Fullname with scope: (Default/TupleGetItem-op9)
  %40(ValueNode_593) = TupleGetItem(%37, I64(2)) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>, <Int64, NoShape>) -> (<Tensor[Int32], (10)>)
      # Fullname with scope: (Default/TupleGetItem-op10)
  %41(CNode_594) = MakeTuple(%38, %39, %40) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (102)>, <Tensor[Int32], (102)>, <Tensor[Int32], (10)>) -> (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>)
      # Fullname with scope: (Default/MakeTuple-op7)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:139, 13~42/      return top_list, top_dist, open_list/
  %42(ValueNode_595) = UpdateState(%33, %37) cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<IOMonad, NoShape>, <Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>) -> (<IOMonad, NoShape>)
      # Fullname with scope: (Default/UpdateState-op4)
  %43(ValueNode_596) = Depend(%41, %42) primitive_attrs: {side_effect_propagate: I64(1)} cnode_attrs: {checkpoint: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>, <IOMonad, NoShape>) -> (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>)
      # Fullname with scope: (Default/Depend-op3)
  Return(%43) cnode_attrs: {checkpoint: Bool(1)}
      : (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>)
      # Fullname with scope: (Default/Return-op2)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:135~137, 6~74/      if cond_func((open_list, top_list, top_dist)):/
}


indirect: 1
subgraph attr:
defer_inline: 0
undeterminate: 0
less_bn: 0
subgraph instance: 136_4_✓__main___get_model__locals__TSModel_construct_584 : 0x61d0f711ee50
# Parameters: 7, (<Tensor[Int32], (102)>, <Tensor[Int32], (1, 2)>, <Tensor[Int32], (3200, 2)>, <Tensor[Int32], (1069, 3)>, <Tensor[Int32], (10)>, <Tensor[Int32], (102)>, <IOMonad, NoShape>)
# In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
subgraph @136_4_✓__main___get_model__locals__TSModel_construct_584(%para5_Parameter_600, %para6_Parameter_598, %para7_centers, %para8_tree, %para9_Parameter_597, %para10_Parameter_599, %para11_io) {
  %0(CNode_552) = PrimFunc_Gather(%para8_tree, %para9_Parameter_597, I64(0), I64(0)) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (1069, 3)>, <Tensor[Int32], (10)>, <Int64, NoShape>, <Int64, NoShape>) -> (<Tensor[Int32], (10, 3)>)
      # Fullname with scope: (Default/Gather-op4)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:71, 22~52/      child_indexes = ops.gather(tree, open_list, 0)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9722~9788/def gather(input_params, input_indices, axis, batch_dims=0):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9788, 11~55/    return gather_op(input_params, input_indices, axis)/
  %1(CNode_554) = PrimFunc_Reshape(%0, (I64(30))) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (10, 3)>, <Tuple[Int64], TupleShape(NoShape), elements_use_flags={[const vector]{1}}>) -> (<Tensor[Int32], (30)>)
      # Fullname with scope: (Default/Reshape-op2)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:79, 27~87/      child_indexes_flat = ops.reshape(child_indexes, (self.op_size*self.tree_degree,))/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:3195~3227/def reshape(input, shape):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:3227, 11~35/    return reshape_op(input, shape)/
  %2(CNode_555) = PrimFunc_Gather(%para7_centers, %0, I64(0), I64(0)) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (3200, 2)>, <Tensor[Int32], (10, 3)>, <Int64, NoShape>, <Int64, NoShape>) -> (<Tensor[Int32], (10, 3, 2)>)
      # Fullname with scope: (Default/Gather-op5)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:73, 25~62/      selected_centers = ops.gather(centers, child_indexes, 0)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9722~9788/def gather(input_params, input_indices, axis, batch_dims=0):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9788, 11~55/    return gather_op(input_params, input_indices, axis)/
  %3(CNode_556) = PrimFunc_Reshape(%2, (I64(30), I64(2))) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (10, 3, 2)>, <Tuple[Int64*2], TupleShape(NoShape, NoShape), elements_use_flags={[const vector]{1, 1}}>) -> (<Tensor[Int32], (30, 2)>)
      # Fullname with scope: (Default/Reshape-op3)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:74, 25~96/      selected_centers = ops.reshape(selected_centers, (self.op_size*self.tree_degree,self.dim))/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:3195~3227/def reshape(input, shape):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:3227, 11~35/    return reshape_op(input, shape)/
  %4(d) = PrimFunc_Sub(%3, %para6_Parameter_598) primitive_attrs: {output_names: [output], input_names: [x, y]} cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (30, 2)>, <Tensor[Int32], (1, 2)>) -> (<Tensor[Int32], (30, 2)>)
      # Fullname with scope: (Default/Sub-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:137, 40~74/        open_list, top_list, top_dist = main_loop_fn(main_loop_init_state)/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~95/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:77, 11~49/      ls = self.calc_l2(selected_centers, vector)/
      # In file /home/i/work/JobScheduling/l2/test3.py:77, 11~23/      ls = self.calc_l2(selected_centers, vector)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:58~65, 4~15/    def calc_l2(self, a, b):/
      # In file /home/i/work/JobScheduling/l2/test3.py:60, 10~15/      d = a - b/
  %5(CNode_557$d2$ls) = PrimFunc_Square(%4) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (30, 2)>) -> (<Tensor[Int32], (30, 2)>)
      # Fullname with scope: (Default/Square-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:137, 40~74/        open_list, top_list, top_dist = main_loop_fn(main_loop_init_state)/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~95/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:77, 11~49/      ls = self.calc_l2(selected_centers, vector)/
      # In file /home/i/work/JobScheduling/l2/test3.py:77, 11~23/      ls = self.calc_l2(selected_centers, vector)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:58~65, 4~15/    def calc_l2(self, a, b):/
      # In file /home/i/work/JobScheduling/l2/test3.py:61, 11~24/      d2 = ops.square(d)/
      # In file /home/i/work/JobScheduling/l2/test3.py:61, 11~21/      d2 = ops.square(d)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:2704~2728/def square(input):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:2728, 11~27/    return square_op(input)/
  %6(CNode_558) = PrimFunc_SumExt(%5, (I64(1)), Bool(0), None) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (30, 2)>, <Tuple[Int64], TupleShape(NoShape), elements_use_flags={[const vector]{1}}>, <Bool, NoShape>, <None, NoShape>) -> (<Tensor[Int64], (30)>)
      # Fullname with scope: (Default/SumExt-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:137, 40~74/        open_list, top_list, top_dist = main_loop_fn(main_loop_init_state)/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~95/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:77, 11~23/      ls = self.calc_l2(selected_centers, vector)/
      # In file /home/i/work/JobScheduling/l2/test3.py:58~65, 4~15/    def calc_l2(self, a, b):/
      # In file /home/i/work/JobScheduling/l2/test3.py:63, 11~18/      ls = ops.sum(d2, dim=1, keepdim=False)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/math_func.py:10741~10804/def sum(input, dim=None, keepdim=False, *, dtype=None):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/math_func.py:10804, 11~49/    return sum_ext_op(input, dim, keepdim, dtype)/
  %7(CNode_559) = PrimFunc_Neg(%6) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int64], (30)>) -> (<Tensor[Int64], (30)>)
      # Fullname with scope: (Default/Neg-op4)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5491~5492, 4~22/    if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5492, 16~22/        input = -input/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9696~9719/def neg(input):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9719, 11~24/    return neg_op(input)/
  %8(res) = TopK(%7, I64(10)) primitive_attrs: {output_names: [values, indices], sorted: Bool(1), input_names: [input, k]} cnode_attrs: {replace_real_kernel_in_backend: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int64], (30)>, <Int64, NoShape>) -> (<Tuple[Tensor[Int64],Tensor[Int32]], TupleShape((10), (10))>)
      # Fullname with scope: (Default/TopK-op2)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5495, 18~34/            res = top_k_(input, k)/
  %9(CNode_560) = TupleGetItem(%8, I64(1)) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int64],Tensor[Int32]], TupleShape((10), (10))>, <Int64, NoShape>) -> (<Tensor[Int32], (10)>)
      # Fullname with scope: (Default/TupleGetItem-op4)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5496, 39~45/            values, indices = -res[0], res[1]/
  %10(CNode_561) = PrimFunc_Gather(%1, %9, I64(0), I64(0)) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (30)>, <Tensor[Int32], (10)>, <Int64, NoShape>, <Int64, NoShape>) -> (<Tensor[Int32], (10)>)
      # Fullname with scope: (Default/Gather-op6)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:83, 16~58/      indexes = ops.gather(child_indexes_flat, indexes, 0)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9722~9788/def gather(input_params, input_indices, axis, batch_dims=0):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9788, 11~55/    return gather_op(input_params, input_indices, axis)/
  %11(CNode_562) = MakeTuple(%para10_Parameter_599, %10) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (102)>, <Tensor[Int32], (10)>) -> (<Tuple[Tensor[Int32]*2], TupleShape((102), (10)), elements_use_flags={[const vector]{1, 1}}>)
      # Fullname with scope: (Default/MakeTuple-op3)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:137, 40~74/        open_list, top_list, top_dist = main_loop_fn(main_loop_init_state)/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~99/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~49/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:86~94, 4~35/    def update_top_list(self, top_list, top_dist, cand_top_list, cand_top_dist):/
      # In file /home/i/work/JobScheduling/l2/test3.py:90, 36~61/      tot_index = mindspore.ops.cat((top_list, cand_top_list))/
  %12(CNode_563) = PrimFunc_Concat(%11, I64(0)) cnode_attrs: {replace_real_kernel_in_backend: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*2], TupleShape((102), (10)), elements_use_flags={[const vector]{1, 1}}>, <Int64, NoShape>) -> (<Tensor[Int32], (112)>)
      # Fullname with scope: (Default/Concat-op2)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~49/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/
      # In file /home/i/work/JobScheduling/l2/test3.py:86~94, 4~35/    def update_top_list(self, top_list, top_dist, cand_top_list, cand_top_dist):/
      # In file /home/i/work/JobScheduling/l2/test3.py:90, 18~62/      tot_index = mindspore.ops.cat((top_list, cand_top_list))/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:4754~4784/def cat(tensors, axis=0):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:4784, 11~37/    return concat_impl(tensors, axis)/
  %13(CNode_564) = TupleGetItem(%8, I64(0)) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int64],Tensor[Int32]], TupleShape((10), (10))>, <Int64, NoShape>) -> (<Tensor[Int64], (10)>)
      # Fullname with scope: (Default/TupleGetItem-op5)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5496, 31~37/            values, indices = -res[0], res[1]/
  %14(CNode_565) = PrimFunc_Neg(%13) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int64], (10)>) -> (<Tensor[Int64], (10)>)
      # Fullname with scope: (Default/Neg-op5)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5496, 30~37/            values, indices = -res[0], res[1]/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9696~9719/def neg(input):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9719, 11~24/    return neg_op(input)/
  %15(CNode_566) = PrimFunc_Cast(%14, I64(34)) primitive_attrs: {output_names: [output], input_names: [x, dst_type]} cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int64], (10)>, <Int64, NoShape>) -> (<Tensor[Int32], (10)>)
      # Fullname with scope: (Default/Cast-op2)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:104, 15~23/      vector = ops.cast(vector_uint8, dtype=mindspore.int32)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9889~9917/def cast(input, dtype):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9917, 11~32/    return cast_op(input, dtype)/
  %16(CNode_567) = MakeTuple(%para5_Parameter_600, %15) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (102)>, <Tensor[Int32], (10)>) -> (<Tuple[Tensor[Int32]*2], TupleShape((102), (10)), elements_use_flags={[const vector]{1, 1}}>)
      # Fullname with scope: (Default/MakeTuple-op4)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:137, 40~74/        open_list, top_list, top_dist = main_loop_fn(main_loop_init_state)/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~99/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~49/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:86~94, 4~35/    def update_top_list(self, top_list, top_dist, cand_top_list, cand_top_dist):/
      # In file /home/i/work/JobScheduling/l2/test3.py:89, 36~61/      tot_dist  = mindspore.ops.cat((top_dist, cand_top_dist))/
  %17(CNode_568) = PrimFunc_Concat(%16, I64(0)) cnode_attrs: {replace_real_kernel_in_backend: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*2], TupleShape((102), (10)), elements_use_flags={[const vector]{1, 1}}>, <Int64, NoShape>) -> (<Tensor[Int32], (112)>)
      # Fullname with scope: (Default/Concat-op3)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~49/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/
      # In file /home/i/work/JobScheduling/l2/test3.py:86~94, 4~35/    def update_top_list(self, top_list, top_dist, cand_top_list, cand_top_dist):/
      # In file /home/i/work/JobScheduling/l2/test3.py:89, 18~62/      tot_dist  = mindspore.ops.cat((top_dist, cand_top_dist))/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:4754~4784/def cat(tensors, axis=0):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:4784, 11~37/    return concat_impl(tensors, axis)/
  %18(CNode_569) = PrimFunc_Neg(%17) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (112)>) -> (<Tensor[Int32], (112)>)
      # Fullname with scope: (Default/Neg-op6)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5491~5492, 4~22/    if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5492, 16~22/        input = -input/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9696~9719/def neg(input):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9719, 11~24/    return neg_op(input)/
  %19(res) = TopK(%18, I64(102)) primitive_attrs: {output_names: [values, indices], sorted: Bool(1), input_names: [input, k]} cnode_attrs: {replace_real_kernel_in_backend: Bool(1), is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (112)>, <Int64, NoShape>) -> (<Tuple[Tensor[Int32]*2], TupleShape((102), (102))>)
      # Fullname with scope: (Default/TopK-op3)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5495, 18~34/            res = top_k_(input, k)/
  %20(CNode_570) = TupleGetItem(%19, I64(1)) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*2], TupleShape((102), (102))>, <Int64, NoShape>) -> (<Tensor[Int32], (102)>)
      # Fullname with scope: (Default/TupleGetItem-op6)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5496, 39~45/            values, indices = -res[0], res[1]/
  %21(CNode_571) = PrimFunc_Gather(%12, %20, I64(0), I64(0)) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (112)>, <Tensor[Int32], (102)>, <Int64, NoShape>, <Int64, NoShape>) -> (<Tensor[Int32], (102)>)
      # Fullname with scope: (Default/Gather-op7)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:119, 29~49/        top_list, top_dist = self.update_top_list(top_list, top_dist, cand_top_list, cand_top_dist)/
      # In file /home/i/work/JobScheduling/l2/test3.py:86~94, 4~35/    def update_top_list(self, top_list, top_dist, cand_top_list, cand_top_dist):/
      # In file /home/i/work/JobScheduling/l2/test3.py:93, 21~54/      new_top_list = ops.gather(tot_index, indexes, 0)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9722~9788/def gather(input_params, input_indices, axis, batch_dims=0):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9788, 11~55/    return gather_op(input_params, input_indices, axis)/
  %22(CNode_572) = TupleGetItem(%19, I64(0)) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*2], TupleShape((102), (102))>, <Int64, NoShape>) -> (<Tensor[Int32], (102)>)
      # Fullname with scope: (Default/TupleGetItem-op7)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5496, 31~37/            values, indices = -res[0], res[1]/
  %23(CNode_573) = PrimFunc_Neg(%22) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (102)>) -> (<Tensor[Int32], (102)>)
      # Fullname with scope: (Default/Neg-op7)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/
      # In file /home/i/work/JobScheduling/l2/test3.py:118, 39~61/        cand_top_list, cand_top_dist = self.process_open_list(centers, tree, vector, open_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:67~84, 4~26/    def process_open_list(self, centers, tree, vector, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:78, 22~30/      tops, indexes = ops.topk(ls, self.op_size, largest=False, sorted=True)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5433~5507/def topk(input, k, dim=None, largest=True, sorted=True):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5493~5498, 4~31/    if dim is None or dim == input.ndim - 1:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5494~5497, 8~34/        if not largest:/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/array_func.py:5496, 30~37/            values, indices = -res[0], res[1]/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9696~9719/def neg(input):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:9719, 11~24/    return neg_op(input)/
  %24(CNode_574$open_list$open_list) = PrimFunc_ClampScalar(%10, I64(0), I64(1068)) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (10)>, <Int64, NoShape>, <Int64, NoShape>) -> (<Tensor[Int32], (10)>)
      # Fullname with scope: (Default/ClampScalar-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:137, 40~74/        open_list, top_list, top_dist = main_loop_fn(main_loop_init_state)/
      # In file /home/i/work/JobScheduling/l2/test3.py:114~123, 6~44/      def main_loop_fn(args):/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:120, 20~62/        open_list = self.update_open_list(tree, cand_top_list)/
      # In file /home/i/work/JobScheduling/l2/test3.py:120, 20~41/        open_list = self.update_open_list(tree, cand_top_list)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/work/JobScheduling/l2/test3.py:96~98, 4~22/    def update_open_list(self, tree, cand_top_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:97, 18~71/      open_list = mindspore.ops.clip(cand_top_list, 0, tree.shape[0]-1)/
      # In file /home/i/work/JobScheduling/l2/test3.py:97, 18~36/      open_list = mindspore.ops.clip(cand_top_list, 0, tree.shape[0]-1)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/clip_func.py:340~347/def clip(input, min=None, max=None):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/clip_func.py:347, 11~33/    return clamp(input, min, max)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/clip_func.py:347, 11~16/    return clamp(input, min, max)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/clip_func.py:227~276/def clamp(input, min=None, max=None):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/clip_func.py:276, 11~40/    return clamp_scalar(input, min, max)/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/function/clip_func.py:276, 11~23/    return clamp_scalar(input, min, max)/<~~This line of code can be shared by multiple nodes, and may be duplicated./
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:4291~4345/def clamp_scalar(input, min=None, max=None):/
      # In file /home/i/.local/lib/python3.10/site-packages/mindspore/ops/auto_generate/gen_ops_def.py:4345, 11~43/    return clamp_scalar_op(input, min, max)/
  %25(ValueNode_575) = MakeTuple(%21, %23, %24) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (102)>, <Tensor[Int32], (102)>, <Tensor[Int32], (10)>) -> (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>)
      # Fullname with scope: (Default/MakeTuple-op5)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:136~137, 8~74/        main_loop_init_state = (open_list, top_list, top_dist)/
  %26(CNode_576) = Print("main_loop_fn ====", %para11_io) primitive_attrs: {side_effect_io: Bool(1)} cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<String, NoShape>, <IOMonad, NoShape>) -> (<Tensor[Int32], (1)>)
      # Fullname with scope: (Default/Print-op0)
  %27(ValueNode_577) = UpdateState(%para11_io, %26) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<IOMonad, NoShape>, <Tensor[Int32], (1)>) -> (<IOMonad, NoShape>)
      # Fullname with scope: (Default/UpdateState-op0)
  %28(CNode_578) = Print(%24, %21, %23, %27) primitive_attrs: {side_effect_io: Bool(1)} cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (10)>, <Tensor[Int32], (102)>, <Tensor[Int32], (102)>, <IOMonad, NoShape>) -> (<Tensor[Int32], (1)>)
      # Fullname with scope: (Default/Print-op1)
  %29(ValueNode_579) = UpdateState(%27, %28) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<IOMonad, NoShape>, <Tensor[Int32], (1)>) -> (<IOMonad, NoShape>)
      # Fullname with scope: (Default/UpdateState-op1)
  %30(CNode_580) = Depend(%25, %29) primitive_attrs: {side_effect_propagate: I64(1)} cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>, <IOMonad, NoShape>) -> (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>)
      # Fullname with scope: (Default/Depend-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:136~137, 8~74/        main_loop_init_state = (open_list, top_list, top_dist)/
  Return(%30)
      : (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>)
      # Fullname with scope: (Default/Return-op0)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:136~137, 8~74/        main_loop_init_state = (open_list, top_list, top_dist)/
}


indirect: 1
subgraph attr:
defer_inline: 0
undeterminate: 0
less_bn: 0
subgraph instance: 137_100_✗__main___get_model__locals__TSModel_construct_585 : 0x61d0f0252650
# Parameters: 4, (<Tensor[Int32], (102)>, <Tensor[Int32], (102)>, <Tensor[Int32], (10)>, <IOMonad, NoShape>)
# In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
subgraph @137_100_✗__main___get_model__locals__TSModel_construct_585(%para12_Parameter_602, %para13_Parameter_603, %para14_Parameter_604, %para15_io) {
  %0(ValueNode_581) = MakeTuple(%para12_Parameter_602, %para13_Parameter_603, %para14_Parameter_604) cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tensor[Int32], (102)>, <Tensor[Int32], (102)>, <Tensor[Int32], (10)>) -> (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>)
      # Fullname with scope: (Default/MakeTuple-op6)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:135~137, 6~74/      if cond_func((open_list, top_list, top_dist)):/
  %1(CNode_582) = Depend(%0, %para15_io) primitive_attrs: {side_effect_propagate: I64(1)} cnode_attrs: {is_dynamic_len: Bool(0)}
      : (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>, <IOMonad, NoShape>) -> (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>)
      # Fullname with scope: (Default/Depend-op2)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:135~137, 6~74/      if cond_func((open_list, top_list, top_dist)):/
  Return(%1)
      : (<Tuple[Tensor[Int32]*3], TupleShape((102), (102), (10)), elements_use_flags={[const vector]{1, 1, 1}}>)
      # Fullname with scope: (Default/Return-op1)
      # In file /home/i/work/JobScheduling/l2/test3.py:100~139, 4~42/    def construct(self, centers, tree, vector_uint8, open_list):/
      # In file /home/i/work/JobScheduling/l2/test3.py:135~137, 6~74/      if cond_func((open_list, top_list, top_dist)):/
}


